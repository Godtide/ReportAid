Activities.sol

tuple(bytes32 version, bytes32 generatedTime, bytes32 linkedData)

static activitiesABI = [
	"event SetActivities(bytes32 _activitiesRef, OrgActivities _activities)",
	"function setActivities(bytes32 _activitiesRef, OrgActivities memory _activities) public",
	"function getNumActivities() public view returns (uint256)",
	"function getReference(uint256 _index) public view returns (bytes32)",
	"function getActivities(bytes32 _activitiesRef) public view returns (OrgActivities memory)",
	"function getVersion(bytes32 _activitiesRef) public view returns (bytes32)",
	"function getGeneratedTime(bytes32 _activitiesRef) public view returns (bytes32)",
	"function getLinkedData(bytes32 _activitiesRef) public view returns (bytes32)",
]

ActivityAdditional.sol

tuple(bytes32 defaultAidType, uint256 defaultFinanceType, uint8 scope, uint8 capitalSpend, uint8 collaborationType, uint8 defaultFlowType, uint8 defaultTiedStatus)

static activityAdditionalABI = [
	"function setAdditional(bytes32 _activitiesRef, bytes32 _activityRef, bytes32 _additionalRef, Additional memory _additional) public",
	"function getNumAdditional(bytes32 _activitiesRef, bytes32 _activityRef) public view returns (uint256)",
	"function getReference(bytes32 _activitiesRef, bytes32 _activityRef, uint256 _index) public view returns (bytes32)",
	"function getAdditional(bytes32 _activitiesRef, bytes32 _activityRef, bytes32 _additionalRef) public view returns (Additional memory)",
	"function getDefaultAidType(bytes32 _activitiesRef, bytes32 _activityRef, bytes32 _additionalRef) public view returns (bytes32)",
	"function getDefaultFinanceType(bytes32 _activitiesRef, bytes32 _activityRef, bytes32 _additionalRef) public view returns (uint256)",
	"function getScope(bytes32 _activitiesRef, bytes32 _activityRef, bytes32 _additionalRef) public view returns (uint8)",
	"function getCapitalSpend(bytes32 _activitiesRef, bytes32 _activityRef, bytes32 _additionalRef) public view returns (uint8)",
	"function getCollaborationType(bytes32 _activitiesRef, bytes32 _activityRef, bytes32 _additionalRef) public view returns (uint8)",
	"function getDefaultFlowType(bytes32 _activitiesRef, bytes32 _activityRef, bytes32 _additionalRef) public view returns (uint8)",
	"function getDefaultTiedStatus(bytes32 _activitiesRef, bytes32 _activityRef, bytes32 _additionalRef) public view returns (uint8)",
]

ActivityBudgets.sol

pragma solidity ^0.5.0,pragma experimental ABIEncoderV2,import "./Budgets.sol",contract ActivityBudgets { function setBudget(bytes32 _activitiesRef, bytes32 _activityRef, bytes32 _budgetRef, Budgets.Budget memory _budget) public, function getNum(bytes32 _activitiesRef, bytes32 _activityRef) public view returns (uint256), function getReference(bytes32 _activitiesRef, bytes32 _activityRef, uint256 _index) public view returns (bytes32), function getBudget(bytes32 _activitiesRef, bytes32 _activityRef, bytes32 _budgetRef) public view returns (Budgets.Budget memory), function getBudgetType(bytes32 _activitiesRef, bytes32 _activityRef, bytes32 _budgetRef) public view returns (uint8), function getBudgetValue(bytes32 _activitiesRef, bytes32 _activityRef, bytes32 _budgetRef) public view returns (uint256), function getBudgetStatus(bytes32 _activitiesRef, bytes32 _activityRef, bytes32 _budgetRef) public view returns (uint8), function getBudgetStart(bytes32 _activitiesRef, bytes32 _activityRef, bytes32 _budgetRef) public view returns (bytes32), function getBudgetEnd(bytes32 _activitiesRef, bytes32 _activityRef, bytes32 _budgetRef) public view returns (bytes32),}

static activityBudgetsABI = [
	"function setBudget(bytes32 _activitiesRef, bytes32 _activityRef, bytes32 _budgetRef, Budgets.Budget memory _budget) public",
	"function getNum(bytes32 _activitiesRef, bytes32 _activityRef) public view returns (uint256)",
	"function getReference(bytes32 _activitiesRef, bytes32 _activityRef, uint256 _index) public view returns (bytes32)",
	"function getBudget(bytes32 _activitiesRef, bytes32 _activityRef, bytes32 _budgetRef) public view returns (Budgets.Budget memory)",
function getBudgetType(bytes32 _activitiesRef, bytes32 _activityRef, bytes32 _budgetRef) public view returns (uint8);  
	"function getBudgetValue(bytes32 _activitiesRef, bytes32 _activityRef, bytes32 _budgetRef) public view returns (uint256)",
	"function getBudgetStatus(bytes32 _activitiesRef, bytes32 _activityRef, bytes32 _budgetRef) public view returns (uint8)",
	"function getBudgetStart(bytes32 _activitiesRef, bytes32 _activityRef, bytes32 _budgetRef) public view returns (bytes32)",
	"function getBudgetEnd(bytes32 _activitiesRef, bytes32 _activityRef, bytes32 _budgetRef) public view returns (bytes32)",
]

ActivityDates.sol

tuple(uint8 dateType, bytes32 date, string narrative)

static activityDatesABI = [
	"event SetDate(bytes32 _activitiesRef, bytes32 _activityRef, bytes32 _dateRef, Date _date)",
	"function setDate(bytes32 _activitiesRef, bytes32 _activityRef,  bytes32 _dateRef, Date memory _date) public",
	"function getNumDates(bytes32 _activitiesRef, bytes32 _activityRef) public view returns (uint256)",
	"function getReference(bytes32 _activitiesRef, bytes32 _activityRef, uint256 _index) public view returns (bytes32)",
	"function getDate(bytes32 _activitiesRef, bytes32 _activityRef, bytes32 _dateRef) public view returns (Date memory)",
	"function getType(bytes32 _activitiesRef, bytes32 _activityRef, bytes32 _dateRef) public view returns (uint8)",
	"function getISODate(bytes32 _activitiesRef, bytes32 _activityRef, bytes32 _dateRef) public view returns (bytes32)",
	"function getNarrative(bytes32 _activitiesRef, bytes32 _activityRef, bytes32 _dateRef) public view returns (string memory)",
]

ActivityParticipatingOrgs.sol

tuple(uint8 orgType, uint8 role, uint256 crsChannelCode, bytes32 lang, bytes32 orgRef, string narrative)

static activityParticipatingOrgsABI = [
	"event SetParticipatingOrg(bytes32 _activitiesRef, bytes32 _activityRef,  bytes32 _particpatingOrgRef, ParticipatingOrg _participatingOrg)",
	"function setParticipatingOrg(bytes32 _activitiesRef, bytes32 _activityRef,  bytes32 _particpatingOrgRef, ParticipatingOrg memory _participatingOrg) public",
	"function getNumParticipatingOrgs(bytes32 _activitiesRef, bytes32 _activityRef) public view returns (uint256)",
	"function getReference(bytes32 _activitiesRef, bytes32 _activityRef, uint256 _index) public view returns (bytes32)",
	"function getParticipatingOrg(bytes32 _activitiesRef, bytes32 _activityRef, bytes32 _particpatingOrgRef) public view returns (ParticipatingOrg memory)",
	"function getOrgRef(bytes32 _activitiesRef, bytes32 _activityRef, bytes32 _particpatingOrgRef) public view returns (bytes32)",
	"function getType(bytes32 _activitiesRef, bytes32 _activityRef, bytes32 _particpatingOrgRef) public view returns (uint8)",
	"function getRole(bytes32 _activitiesRef, bytes32 _activityRef, bytes32 _particpatingOrgRef) public view returns (uint8)",
	"function getCrsChannelCode(bytes32 _activitiesRef, bytes32 _activityRef, bytes32 _particpatingOrgRef) public view returns (uint256)",
	"function getNarrative(bytes32 _activitiesRef, bytes32 _activityRef, bytes32 _particpatingOrgRef) public view returns (string memory)",
	"function getLang(bytes32 _activitiesRef, bytes32 _activityRef, bytes32 _particpatingOrgRef) public view returns (bytes32)",
]

ActivitySectors.sol

tuple(uint8 percentage, uint256 dacCode)

static activitySectorsABI = [
	"function setSector(bytes32 _activitiesRef, bytes32 _activityRef, bytes32 _sectorRef, Sector memory _sector) public",
	"function getNum(bytes32 _activitiesRef, bytes32 _activityRef) public view returns (uint256)",
	"function getReference(bytes32 _activitiesRef, bytes32 _activityRef, uint256 _index) public view returns (bytes32)",
	"function getSector(bytes32 _activitiesRef, bytes32 _activityRef, bytes32 _sectorRef) public view returns (Sector memory)",
	"function getDACCode(bytes32 _activitiesRef, bytes32 _activityRef, bytes32 _sectorRef) public view returns (uint256)",
	"function getPercentage(bytes32 _activitiesRef, bytes32 _activityRef, bytes32 _sectorRef) public view returns (uint8)",
]

Activity.sol

tuple(bool humanitarian, uint8 hierarchy, uint8 status, uint8 budgetNotProvided, ReportingOrg reportingOrg, bytes32 lastUpdated, bytes32 lang, bytes32 currency, bytes32 linkedData, bytes32 identifier, bytes32 title, string description)

static activityABI = [
	"function setActivity(bytes32 _activitiesRef, bytes32 activityRef, OrgActivity memory _activity) public",
	"function getNumActivities(bytes32 _activitiesRef) public view returns (uint256)",
	"function getReference(bytes32 _activitiesRef, uint256 _index) public view returns (bytes32)",
	"function getActivity(bytes32 _activitiesRef, bytes32 _activityRef) public view returns (OrgActivity memory)",
	"function getIdentifier(bytes32 _activitiesRef, bytes32 _activityRef) public view returns (bytes32)",
	"function getReportingOrg(bytes32 _activitiesRef, bytes32 _activityRef) public view returns (ReportingOrg memory)",
	"function getTitle(bytes32 _activitiesRef, bytes32 _activityRef) public view returns (bytes32)",
	"function getLastUpdatedTime(bytes32 _activitiesRef, bytes32 _activityRef) public view returns (bytes32)",
	"function getLang(bytes32 _activitiesRef, bytes32 _activityRef) public view returns (bytes32)",
	"function getCurrency(bytes32 _activitiesRef, bytes32 _activityRef) public view returns (bytes32)",
	"function getHumanitarian(bytes32 _activitiesRef, bytes32 _activityRef) public view returns (bool)",
	"function getHierarchy(bytes32 _activitiesRef, bytes32 _activityRef) public view returns (uint8)",
	"function getStatus(bytes32 _activitiesRef, bytes32 _activityRef) public view returns (uint8)",
	"function getBudgetNotProvided(bytes32 _activitiesRef, bytes32 _activityRef) public view returns (uint8)",
	"function getLinkedData(bytes32 _activitiesRef, bytes32 _activityRef) public view returns (bytes32)",
	"function getDescription(bytes32 _activitiesRef, bytes32 _activityRef) public view returns (string memory)",
]

ActivityTerritories.sol

tuple(uint8 percentage, bytes32 territory)

static activityTerritoriesABI = [
	"event SetTerritory(bytes32 _activitiesRef, bytes32 _activityRef, bytes32 _territoryRef, Territory _territory)",
	"function setTerritory(bytes32 _activitiesRef, bytes32 _activityRef,  bytes32 _territoryRef, Territory memory _territory) public",
	"function getNum(bytes32 _activitiesRef, bytes32 _activityRef) public view returns (uint256)",
	"function getReference(bytes32 _activitiesRef, bytes32 _activityRef, uint256 _index) public view returns (bytes32)",
	"function getTerritory(bytes32 _activitiesRef, bytes32 _activityRef, bytes32 _territoryRef) public view returns (Territory memory)",
	"function getPercentage(bytes32 _activitiesRef, bytes32 _activityRef, bytes32 _territoryRef) public view returns (uint8)",
	"function getDACTerritory(bytes32 _activitiesRef, bytes32 _activityRef, bytes32 _territoryRef) public view returns (bytes32)",
]

OrganisationBudgets.sol

pragma solidity ^0.5.0,pragma experimental ABIEncoderV2,import "./Budgets.sol",contract OrganisationBudgets { function setBudget(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef, Budgets.Budget memory _budget) public, function getNumBudgets(bytes32 _organisationsRef, bytes32 _organisationRef) public view returns (uint256), function getBudgetReference(bytes32 _organisationsRef, bytes32 _organisationRef, uint256 _index) public view returns (bytes32), function getBudget(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef) public view returns (Budgets.Budget memory), function getBudgetLine(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef) public view returns (bytes32), function getBudgetValue(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef) public view returns (uint256), function getBudgetStatus(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef) public view returns (uint8), function getBudgetStart(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef) public view returns (bytes32), function getBudgetEnd(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef) public view returns (bytes32),}

static organisationBudgetsABI = [
	"function setBudget(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef, Budgets.Budget memory _budget) public",
	"function getNumBudgets(bytes32 _organisationsRef, bytes32 _organisationRef) public view returns (uint256)",
	"function getBudgetReference(bytes32 _organisationsRef, bytes32 _organisationRef, uint256 _index) public view returns (bytes32)",
	"function getBudget(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef) public view returns (Budgets.Budget memory)",
	"function getBudgetLine(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef) public view returns (bytes32)",
	"function getBudgetValue(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef) public view returns (uint256)",
	"function getBudgetStatus(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef) public view returns (uint8)",
	"function getBudgetStart(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef) public view returns (bytes32)",
	"function getBudgetEnd(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef) public view returns (bytes32)",
]

OrganisationCountryBudgets.sol

pragma solidity ^0.5.0,pragma experimental ABIEncoderV2,import "./Budgets.sol",contract OrganisationCountryBudgets { function setCountryBudget(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef, Budgets.Budget memory _budget) public, function getNumCountryBudgets(bytes32 _organisationsRef, bytes32 _organisationRef) public view returns (uint256), function getCountryBudgetReference(bytes32 _organisationsRef, bytes32 _organisationRef, uint256 _index) public view returns (bytes32), function getCountryBudget(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef) public view returns (Budgets.Budget memory), function getCountryBudgetLine(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef) public view returns (bytes32), function getCountryBudgetCountry(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef) public view returns (bytes32), function getCountryBudgetValue(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef) public view returns (uint256), function getCountryBudgetStatus(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef) public view returns (uint8), function getCountryBudgetStart(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef) public view returns (bytes32), function getCountryBudgetEnd(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef) public view returns (bytes32),}

static organisationCountryBudgetsABI = [
	"function setCountryBudget(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef, Budgets.Budget memory _budget) public",
	"function getNumCountryBudgets(bytes32 _organisationsRef, bytes32 _organisationRef) public view returns (uint256)",
	"function getCountryBudgetReference(bytes32 _organisationsRef, bytes32 _organisationRef, uint256 _index) public view returns (bytes32)",
	"function getCountryBudget(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef) public view returns (Budgets.Budget  memory)",
	"function getCountryBudgetLine(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef) public view returns (bytes32)",
	"function getCountryBudgetCountry(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef) public view returns (bytes32)",
	"function getCountryBudgetValue(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef) public view returns (uint256)",
	"function getCountryBudgetStatus(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef) public view returns (uint8)",
	"function getCountryBudgetStart(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef) public view returns (bytes32)",
	"function getCountryBudgetEnd(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef) public view returns (bytes32)",
]

OrganisationDocs.sol

tuple(string title, string format, string url, bytes32 category, bytes32 countryRef, string desc, bytes32 lang, bytes32 date)

static organisationDocsABI = [
	"event SetDocument(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _docRef, Document _document)",
	"function setDocument(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _docRef, Document memory _document) public",
	"function getNumDocs(bytes32 _organisationsRef, bytes32 _organisationRef) public view returns (uint256)",
	"function getDocReference(bytes32 _organisationsRef, bytes32 _organisationRef, uint256 _index) public view returns (bytes32)",
	"function getDocument(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _docRef) public view returns (Document memory)",
	"function getDocumentTitle(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _docRef) public view returns (string memory)",
	"function getDocumentFormat(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _docRef) public view returns (string memory)",
	"function getDocumentURL(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _docRef) public view returns (string memory)",
	"function getDocumentCategory(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _docRef) public view returns (bytes32)",
	"function getDocumentCountry(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _docRef) public view returns (bytes32)",
	"function getDocumentDescription(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _docRef) public view returns (string memory)",
	"function getDocumentLang(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _docRef) public view returns (bytes32)",
	"function getDocumentDate(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _docRef) public view returns (bytes32)",
]

OrganisationExpenditure.sol

pragma solidity ^0.5.0,pragma experimental ABIEncoderV2,import "./Budgets.sol",contract OrganisationExpenditure { function setExpenditure(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _expenditureRef, Budgets.Budget memory _expenditure) public, function getNumExpenditures(bytes32 _organisationsRef, bytes32 _organisationRef) public view returns (uint256), function getExpenditureReference(bytes32 _organisationsRef, bytes32 _organisationRef, uint256 _index) public view returns (bytes32), function getExpenditure(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _expenditureRef) public view returns (Budgets.Budget memory), function getExpenditureLine(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _expenditureRef) public view returns (bytes32), function getExpenditureValue(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _expenditureRef) public view returns (uint256), function getExpenditureStatus(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _expenditureRef) public view returns (uint8), function getExpenditureStart(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _expenditureRef) public view returns (bytes32), function getExpenditureEnd(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _expenditureRef) public view returns (bytes32),}

static organisationExpenditureABI = [
	"function setExpenditure(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _expenditureRef, Budgets.Budget memory _expenditure) public",
	"function getNumExpenditures(bytes32 _organisationsRef, bytes32 _organisationRef) public view returns (uint256)",
	"function getExpenditureReference(bytes32 _organisationsRef, bytes32 _organisationRef, uint256 _index) public view returns (bytes32)",
	"function getExpenditure(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _expenditureRef) public view returns (Budgets.Budget memory)",
	"function getExpenditureLine(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _expenditureRef) public view returns (bytes32)",
	"function getExpenditureValue(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _expenditureRef) public view returns (uint256)",
	"function getExpenditureStatus(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _expenditureRef) public view returns (uint8)",
	"function getExpenditureStart(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _expenditureRef) public view returns (bytes32)",
	"function getExpenditureEnd(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _expenditureRef) public view returns (bytes32)",
]

OrganisationRecipientBudgets.sol

pragma solidity ^0.5.0,pragma experimental ABIEncoderV2,import "./Budgets.sol",contract OrganisationRecipientBudgets { function setRecipientBudget(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef, Budgets.Budget memory _budget) public, function getNumRecipientBudgets(bytes32 _organisationsRef, bytes32 _organisationRef) public view returns (uint256), function getRecipientBudgetReference(bytes32 _organisationsRef, bytes32 _organisationRef, uint256 _index) public view returns (bytes32), function getRecipientBudget(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef) public view returns (Budgets.Budget memory), function getRecipientBudgetLine(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef) public view returns (bytes32), function getRecipientBudgetOrg(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef) public view returns (bytes32), function getRecipientBudgetValue(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef) public view returns (uint256), function getRecipientBudgetStatus(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef) public view returns (uint8), function getRecipientBudgetStart(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef) public view returns (bytes32), function getRecipientBudgetEnd(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef) public view returns (bytes32),}

static organisationRecipientBudgetsABI = [
	"function setRecipientBudget(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef, Budgets.Budget memory _budget) public",
	"function getNumRecipientBudgets(bytes32 _organisationsRef, bytes32 _organisationRef) public view returns (uint256)",
	"function getRecipientBudgetReference(bytes32 _organisationsRef, bytes32 _organisationRef, uint256 _index) public view returns (bytes32)",
	"function getRecipientBudget(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef) public view returns (Budgets.Budget memory)",
	"function getRecipientBudgetLine(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef) public view returns (bytes32)",
	"function getRecipientBudgetOrg(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef) public view returns (bytes32)",
	"function getRecipientBudgetValue(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef) public view returns (uint256)",
	"function getRecipientBudgetStatus(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef) public view returns (uint8)",
	"function getRecipientBudgetStart(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef) public view returns (bytes32)",
	"function getRecipientBudgetEnd(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef) public view returns (bytes32)",
]

OrganisationRegionBudgets.sol

pragma solidity ^0.5.0,pragma experimental ABIEncoderV2,import "./Budgets.sol",contract OrganisationRegionBudgets { function setRegionBudget(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef, Budgets.Budget memory _budget) public, function getNumRegionBudgets(bytes32 _organisationsRef, bytes32 _organisationRef) public view returns (uint256), function getRegionBudgetReference(bytes32 _organisationsRef, bytes32 _organisationRef, uint256 _index) public view returns (bytes32), function getRegionsBudget(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef) public view returns (Budgets.Budget memory), function getRegionsBudgetLine(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef) public view returns (bytes32), function getRegionsBudgetRegion(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef) public view returns (bytes32), function getRegionsBudgetValue(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef) public view returns (uint256), function getRegionsBudgetStatus(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef) public view returns (uint8), function getRegionsBudgetStart(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef) public view returns (bytes32), function getRegionsBudgetEnd(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef) public view returns (bytes32),}

static organisationRegionBudgetsABI = [
	"function setRegionBudget(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef, Budgets.Budget memory _budget) public",
	"function getNumRegionBudgets(bytes32 _organisationsRef, bytes32 _organisationRef) public view returns (uint256)",
	"function getRegionBudgetReference(bytes32 _organisationsRef, bytes32 _organisationRef, uint256 _index) public view returns (bytes32)",
	"function getRegionsBudget(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef) public view returns (Budgets.Budget memory)",
	"function getRegionsBudgetLine(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef) public view returns (bytes32)",
	"function getRegionsBudgetRegion(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef) public view returns (bytes32)",
	"function getRegionsBudgetValue(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef) public view returns (uint256)",
	"function getRegionsBudgetStatus(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef) public view returns (uint8)",
	"function getRegionsBudgetStart(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef) public view returns (bytes32)",
	"function getRegionsBudgetEnd(bytes32 _organisationsRef, bytes32 _organisationRef, bytes32 _budgetRef) public view returns (bytes32)",
]

Organisation.sol

tuple(bytes32 orgRef, ReportingOrg reportingOrg, bytes32 lang, bytes32 currency, bytes32 lastUpdatedTime)

static organisationABI = [
	"event SetOrganisation(bytes32 _organisationsRef, bytes32 _organisationRef, Org _org)",
	"function setOrganisation(bytes32 _organisationsRef, bytes32 _organisationRef, Org memory _org) public",
	"function getNumOrganisations(bytes32 _organisationsRef) public view returns (uint256)",
	"function getOrganisationReference(bytes32 _organisationsRef, uint256 _index) public view returns (bytes32)",
	"function getOrganisation(bytes32 _organisationsRef, bytes32 _organisationRef) public view returns (Org memory)",
	"function getOrganisationOrg(bytes32 _organisationsRef, bytes32 _organisationRef) public view returns (bytes32)",
	"function getReportingOrg(bytes32 _organisationsRef, bytes32 _organisationRef) public view returns (bytes32)",
	"function getReportingOrgType(bytes32 _organisationsRef, bytes32 _organisationRef) public view returns (uint8)",
	"function getReportingOrgIsSecondary(bytes32 _organisationsRef, bytes32 _organisationRef) public view returns (bool)",
	"function getLang(bytes32 _organisationsRef, bytes32 _organisationRef) public view returns (bytes32)",
	"function getCurrency(bytes32 _organisationsRef, bytes32 _organisationRef) public view returns (bytes32)",
	"function getLastUpdatedTime(bytes32 _organisationsRef, bytes32 _organisationRef) public view returns (bytes32)",
]

Organisations.sol

tuple(bytes32 version, bytes32 generatedTime)

static organisationsABI = [
	"event SetOrganisations(bytes32 _organisationsRef, Orgs _organisations)",
	"function setOrganisations(bytes32 _organisationsRef, Orgs memory _organisations) public",
	"function getNumOrganisations() public view returns (uint256)",
	"function getOrganisationsReference(uint256 _index) public view returns (bytes32)",
	"function getOrganisations(bytes32 _organisationsRef) public view returns (Orgs memory)",
	"function getVersion(bytes32 _organisationsRef) public view returns (bytes32)",
	"function getGeneratedTime(bytes32 _organisationsRef) public view returns (bytes32)",
]

Orgs.sol

tuple(string name, string identifier)

static orgsABI = [
	"event SetOrg(bytes32 _orgRef, Org _org)",
	"function setOrg(bytes32 _orgRef, Org memory _org) public",
	"function getNumOrgs() public view returns (uint256)",
	"function getOrgReference(uint256 _index) public view returns (bytes32)",
	"function getOrg(bytes32 _orgRef) public view returns (Org memory)",
	"function getOrgName(bytes32 _orgRef) public view returns (string memory)",
	"function getOrgIdentifier(bytes32 _orgRef) public view returns (string memory)",
]

